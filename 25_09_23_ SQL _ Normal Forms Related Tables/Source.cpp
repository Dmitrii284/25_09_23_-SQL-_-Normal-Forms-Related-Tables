/*
Normal Forms Related Tables Нормальные формы Связные таблици

1) Нормализыция БД - Уменьшать избыточные данные. (
................................................
 Нормализация базы данных в SQL - это процесс организации структуры таблиц таким образом, чтобы исключить избыточность данных,
а также минимизировать зависимость между таблицами. 
Это позволяет избежать проблем с целостностью и согласованностью данных, 
а также упрощает запросы к базе данных.

 Процесс нормализации включает в себя несколько шагов (нормальных форм), 
начиная с первой нормальной формы (1NF) и заканчивая третьей нормальной формой (3NF).
На каждом шаге устраняются определенные виды функциональной зависимости между атрибутами.

 Для проведения нормализации и модификации структуры таблиц в SQL используются различные команды,
такие как CREATE TABLE, ALTER TABLE, DROP TABLE, INSERT, UPDATE, DELETE, SELECT и другие.


 Аномалии - аномалии вставки , Аномалии обновления И аномалии Удаления
 аномалии вставки - когда запрет на втсавку данных
 Пример : Есть студент . Ему надо оплатить учебу. В базе данных таблица требует информацию о студенте ( Его оплате)
 Тоесть требует избыточную информацию.

 Аномалии обновления - Это когда обновление приводит к аномальным (Нелогичныой работе программы) 
 Пимер: в таблице обновилось только одно поле.

 Аномалии Удаления -  При удалении какой либо строки приводит к аномальной (Неправильной работе данных программы)
 Удаление записи из базы данных приводит к потере информации.
 Пример: удаление заказа приводит к удалению информации.

 Это все последствия нащего плохого планирования. ( Планирования программы которая позволяет это делать)

 Всего 9 Нормальных форм БД.
 Первая
 Вторая
 Третья
 Нормальная форма -  Бойса Кода
 Четвертая
 ----
 ---
 ---
 ---
 Доменная ключевая -  Это используется в серверах для транзакций.

 Первая (1NF) - описывает таблицу которая поддерживает атомарное значение и не содержит (Множественности)
 Хранить сериализованные данные в одной таблице Это нарушение.
 Это есть 
 Таблица : 

 Вторая (2NF) - Требует чтобы каждый не ключевой столбец зависел от своего ключа.
 мы не дублируем информацию во второй таблице.
 Ключом у этих бвух таблиц Это или ID или пересечение двух полей ( Номер заказа и Продукт допустим)

 Третья(3NF)
  Это три таблицы где нет повторений из прежыдущих таблиц. Но Ключом служит свой личный ID  для каждой иаблици
  При описании книги есть зависимость от ID   Допустим Автор ID  Во второй таблице  Издательство ID  ( И Автор ID и  Издательство ID )

  Третья форма это два поля  ID 
  Требует чтобы таблица находилась во Второй Нормальной форме и чтобы не клюячевые атрибута в таблице не зависели друг от дрга.
  Она соблюбает доменноключевую форму( Ключевое поле может и не быть индексом)

  ..............................
  Нормальная форма -  Бойса Кода(BCNF)
  Это каждый НЕкдлючевой атрибут должен быть функционально зависим от 
  Другими словами, BCNF требует, чтобы в каждой функциональной зависимости участвовали все атрибуты, которые функционально зависят от ключа таблицы.
  ............
  Как определить разницу между BCNF и (3NF)
  1)  Нетривиальная зависимость- Идентификация функциональных зависимостей - Это Идентификатор функциональных зависимостей (  это выявление функциональных зависимостей между атрибутами)
    Это когда значение одного атрибута "Зависимый атрибут" функционально зависит от значения другого атрибута"Опредедляющий")

  2) поиск неправильных зависимостей -  Это поиск неправильных зависимостей ( После идентификации таблици неключевые атрибуты зависят от других неключевых атрибутов, а не только от первичного ключа)
  Убедитесь что каждый ключь идентифицирует каждую запись в таблице , Проверьте что каждые не функциональные атрибуты зависят от первичного ключа и что нет зависимостей от
  неключевых атрибутов.( Что нет таких неключевых атрибутов которые зависят дуг от друга)
  4) Используйте анализ данных - Проанализировать это так что при удалении , обновлении или вставке может привести к аномалиям при 
  наличии нетривиальных зависимостей между неключевыми атрибутами
  Пример: У одних повторяются одни данные у других другие. (Допустим по банкам) Разные банки. Надо увидеть (Есьт ли необходимость вытаскивать данные в отдельную таблицу или нет)
  Что координально будет отличать Один договор от другого договора. Выявить Ключи Затем выявить нетривиальные зависимости.

   Пример: Одна фирма запоминает клиента по ФИО Другая по ИНН. Другая по номеру договора. Третья По Номеру карты производит идентификацию.
   Вот надо сгруппировать и расбить по таблицам.  И Выделить ID Допустим по 

   Работа Аналитик Данных. Работник с базами данных Как Тестировщик.
...................
   Четвертая (4NF) - применяется для устранения многозначных зависимостей между данными. (Многие ко многим) - Надо просто разбить таблицу на 4 таблици.
   Она автоматически получается когда делаем сввязи многие ко многим.
   Пример: Какие студенты ходили к каким преподавателям.  и какую оценку имеют.(Есть Таблица третья Как связъ многие ко многим) 
   Вот в 4 таблице соединяем ID в оду таблицу и ставим оценку()
   Первая таблица (Храним в ней ID студентов и их инфу + Группа)
   Во второй таблице (Храним ID Учителей и их данные  + Предмет)
   в третьей курс ID и + Название курса.
   В четвертой соединяем все 3 ID и + Оценка.
   (Просто тем самым убираем исбыточные данные в сводные таблици)
...........................
   Пятая (5NF) - Касается многоверсионных данных и их управлением. ( Когда нельзя разбить таблицу )
   Нарушение Атомарное - Это хранение дединичного идентификатора . 
   Пример: Хранение праоля. По одному ID  ( А их Несколько паролей)  вот в эту таблицу можно внедрить
   5NF требует, чтобы все неключевые атрибуты в таблице были взаимно независимы, то есть ни один из них не должен быть функционально зависим от других.

   Шестая(6NF) -   Она нужна чтобы выглаживать таблици С возможностью изменения независимых атрибутов.  (когда поле можно разбить на компоненты)
   Пример: Документы и их сортировка (В юр отделе)
   таблица первая Содержит  Документ ID + Название Документа (Один ключ)
   Вторая таблица Хранит Версию ID  документ ID + Дата изменения ( Два ключа)
   Третья таблица Хранит Версию ID Документ ID Параграф ID + Текст параграфа ( 
   Когда данные можно разбить на запчасти и мы можем каждую капсулу можно менять ( добавлять или изменять  )

................
   седъмая (7NF) - Когда требуется изоляция данных При организации БД в разных Местах. (Условие Компоненты должны иметь разную область видимости для пользователей) 
   Это контроль беопастности в нури БД.
   Пример : Биржа 
   атомарно разъединяем разные значения 
................
   Доменно ключевая Нормальная форма(DKNF) - Это не только функционалные зависимости но и ограничения на домены данных.
   Доменное свойство - Это правило бизнес логики какогото типа даных. 
   Пример : Доступ к домену.
    Логин и Пароль в виде пары (соответсвует админу ) - Пользователь заходит как Админ
    Если Логин и Пароль ввели ( Соответсвующий  пользователю) - то входим как пользователь.
    Применяется в Доменах. паролей . для входа на один и тот же ресурс используем 9Тоесть все поля которые мы увидим зависит от Ключа)

\\\\\\\\\\\\\\\\\\\\\
    Критерий И аспекты нормализации

    Функциональные зависимости - (Смотрим от чего завият атрибуты) Выясняем как оно работает (диаграмма Коммуникаций) Что кому передать.(1NF)
    Анализ избыточных Данных - смотрим где повторяются Данные (Дубли выявляем) Поля дубли. (3NF) (2NF)
    Многозначные зависимости - Многие ко многим связей ( Тоесть то на что ссылемся имеет несколько значений) (3NF) (2NF)
    Пример: Блюдо  
    Одно и тоже блюдо может бысь с мясом , С курицей, С Креветками.

    Составные ключи - 
    Пример: Фирма с ИНН и Названием - Это 1 фирма. (Потом поменяли Имя фирмы и ИНН) (Используются ли составные ключи для нескольеих атрибутов)(3NF) (2NF)
    Множественные атрибуты - 
    Ключи и связи - Где связи просты е это (3NF) Где связи наиболее сложные то (6NF) 



    (-)
    Ненужные атрибуты - 
    Пример : Фирма работает с германией. (В базе можно не хранить Ms.Marnnm ( Ms можно не хранить )

    Множественные атрибуты в ключе: (Если ключь состоит из нескольких атрибутов убедитесь что функциональность достатачна и не требует дополнения ключа)
    Требования к производительности -  

    Повторяющиеся группы атрибутов - 
    Общие атрибуты_ Название и дата (Они могут фиксироваться у чего угодно) (Речь идет Абсолютно одинаковые по названию (Подозрительно что в Шапке одно и тоже название)
    Нормализация до (3NF) - 
    Специфические требования -  Для (5NF) (6NF) 
    Пример: Бизес Если я сделал программу  то БД то Заказчик не поймет код но что бизнес заработал ему будет понятно

    Типи связей в БД
    Один к одгому  ( Каждая строчка соответсвует одной строчке в другой(Понадобилось разширить БД) (И скрыть часть данных) 
    пример: Скрываем часть информации о сотруднике(Разбиваем на таблици) А основные в другой)

    Один к одгому многим - (3NF) (4NF) 
    многие к многим - (5NF) (6NF) 

    Код  По Фото 25_09_23

    Разница во внешнем ключе ( Внешний ключь Один к одному как УНИК) Только один) А многие ко многим Без использования УНИК.

    Многие ко многим ( Куй Студент + Куй На Курсы)


     SELECT SQL - 

  ..........








2) Типы нормальных форм
3) Связные таблици
4) Способы связи таблиц


*/